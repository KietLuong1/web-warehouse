import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Box, Divider, Grid, Stack, Typography } from '@mui/material';
import { Modal } from 'antd';
export const LocationDetailModal = ({ isVisible, onClose, locationData }) => {
    if (!locationData)
        return null;
    return (_jsx(Modal, { title: 'Location Details', open: isVisible, onCancel: onClose, footer: null, centered: true, styles: { body: { maxHeight: '60vh', overflowY: 'auto', padding: '12px', backgroundColor: 'transparent' } }, children: _jsx(Stack, { spacing: 2, children: _jsxs(Box, { children: [_jsx(Typography, { variant: 'subtitle1', fontWeight: 'bold', children: "General Information" }), _jsx(Divider, { sx: { my: 1 } }), _jsxs(Grid, { container: true, spacing: 2, children: [_jsxs(Grid, { item: true, xs: 6, children: [_jsx(Typography, { variant: 'body2', color: 'text.secondary', children: "Location ID" }), _jsx(Typography, { variant: 'body1', children: locationData.location_id })] }), locationData.code && (_jsxs(Grid, { item: true, xs: 6, children: [_jsx(Typography, { variant: 'body2', color: 'text.secondary', children: "Code" }), _jsx(Typography, { variant: 'body1', children: locationData.code })] })), locationData.zone && (_jsxs(Grid, { item: true, xs: 6, children: [_jsx(Typography, { variant: 'body2', color: 'text.secondary', children: "Zone" }), _jsx(Typography, { variant: 'body1', children: locationData.zone })] })), locationData.shelf && (_jsxs(Grid, { item: true, xs: 6, children: [_jsx(Typography, { variant: 'body2', color: 'text.secondary', children: "Shelf" }), _jsx(Typography, { variant: 'body1', children: locationData.shelf })] })), locationData.rack && (_jsxs(Grid, { item: true, xs: 6, children: [_jsx(Typography, { variant: 'body2', color: 'text.secondary', children: "Rack" }), _jsx(Typography, { variant: 'body1', children: locationData.rack })] })), locationData.capacity && (_jsxs(Grid, { item: true, xs: 6, children: [_jsx(Typography, { variant: 'body2', color: 'text.secondary', children: "Capacity" }), _jsx(Typography, { variant: 'body1', children: locationData.capacity })] })), locationData.status && (_jsxs(Grid, { item: true, xs: 6, children: [_jsx(Typography, { variant: 'body2', color: 'text.secondary', children: "Status" }), _jsx(Typography, { variant: 'body1', children: locationData.status })] })), locationData.description && (_jsxs(Grid, { item: true, xs: 6, children: [_jsx(Typography, { variant: 'body2', color: 'text.secondary', children: "Description" }), _jsx(Typography, { variant: 'body1', children: locationData.description })] }))] })] }) }) }));
};
