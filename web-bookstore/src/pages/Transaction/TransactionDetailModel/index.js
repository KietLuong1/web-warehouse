import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Box, Divider, Grid, Stack, Typography } from '@mui/material';
import { Modal } from 'antd';
export const TransactionDetailModal = ({ isVisible, onClose, transactionData }) => {
    if (!transactionData)
        return null;
    return (_jsx(Modal, { title: 'Transaction Details', open: isVisible, onCancel: onClose, footer: null, centered: true, styles: { body: { maxHeight: '60vh', overflowY: 'auto', padding: '12px', backgroundColor: 'transparent' } }, children: _jsx(Stack, { spacing: 2, children: _jsxs(Box, { children: [_jsx(Typography, { variant: 'subtitle1', fontWeight: 'bold', children: "General Information" }), _jsx(Divider, { sx: { my: 1 } }), _jsxs(Grid, { container: true, spacing: 2, children: [_jsxs(Grid, { item: true, xs: 6, children: [_jsx(Typography, { variant: 'body2', color: 'text.secondary', children: "Transaction Number" }), _jsx(Typography, { variant: 'body1', children: '---' })] }), transactionData.product && (_jsxs(Grid, { item: true, xs: 6, children: [_jsx(Typography, { variant: 'body2', color: 'text.secondary', children: "Product Name" }), _jsx(Typography, { variant: 'body1', children: transactionData.product.name })] })), transactionData.totalPrice && (_jsxs(Grid, { item: true, xs: 6, children: [_jsx(Typography, { variant: 'body2', color: 'text.secondary', children: "Total Price" }), _jsx(Typography, { variant: 'body1', children: transactionData.totalPrice })] })), transactionData.totalProducts && (_jsxs(Grid, { item: true, xs: 6, children: [_jsx(Typography, { variant: 'body2', color: 'text.secondary', children: "Total Products" }), _jsx(Typography, { variant: 'body1', children: transactionData.totalProducts })] })), transactionData.status && (_jsxs(Grid, { item: true, xs: 6, children: [_jsx(Typography, { variant: 'body2', color: 'text.secondary', children: "Status" }), _jsx(Typography, { variant: 'body1', children: transactionData.status })] })), transactionData.transactionType && (_jsxs(Grid, { item: true, xs: 6, children: [_jsx(Typography, { variant: 'body2', color: 'text.secondary', children: "Transaction Type" }), _jsx(Typography, { variant: 'body1', children: transactionData.transactionType })] })), transactionData.description && (_jsxs(Grid, { item: true, xs: 12, children: [_jsx(Typography, { variant: 'body2', color: 'text.secondary', children: "Description" }), _jsx(Typography, { variant: 'body1', children: transactionData.description })] }))] })] }) }) }));
};
